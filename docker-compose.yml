---
version: '3'
services:
  web:
    build:
      context: .
      args:
        RAILS_ENV: "development"
        BUNDLE_GEMS__CONTRIBSYS__COM: ${BUNDLE_GEMS__CONTRIBSYS__COM}
    image: local/data_submission_service_api_app
    ports: ["3000:3000"]
    environment:
      RAILS_ENV: "development"
    env_file:
      - docker-compose.env
    depends_on:
      - db
      - redis
    tty: true
    stdin_open: true
    restart: on-failure
    volumes:
      - .:/srv/dss-api:cached
      - node_modules:/srv/dss-api/node_modules:cached
    command: sh -c "rm -f tmp/pids/server.pid && bin/rails s -b 0.0.0.0 -p 3000"
    container_name: "data-submission-service-api_web"
    networks:
      public:
        aliases:
          - api
      private:
  worker:
    image: local/data_submission_service_api_app
    build:
      context: .
      args:
        RAILS_ENV: "development"
        BUNDLE_GEMS__CONTRIBSYS__COM: ${BUNDLE_GEMS__CONTRIBSYS__COM}
    environment:
      RAILS_ENV: "development"
    env_file:
      - docker-compose.env
    depends_on:
      - db
      - redis
      - web
    tty: true
    stdin_open: true
    restart: on-failure
    volumes:
      - .:/srv/dss-api:cached
    command: sh -c "bundle exec sidekiq"
    container_name: "data-submission-service-api_worker"
    networks:
      private:
  db:
    image: postgres
    volumes:
      - data:/var/lib/postgresql/data/:cached
    restart: on-failure
    container_name: "data-submission-service-api_db"
    networks:
      private:
    environment:
      POSTGRES_PASSWORD: "password"
  redis:
    image: redis
    container_name: "data-submission-service-api_redis"
    expose:
      - 6379
    networks:
      private:

volumes:
  data: {}
  node_modules:

networks:
  public:
  private:
